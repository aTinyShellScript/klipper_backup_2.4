# enable to SET_KINEMATIC_POSITION for Z hop
[force_move]
enable_force_move: True

# Macro to Deploy Bed Probe
[gcode_macro M401]
gcode:
    G90
    {action_respond_info("Entering M401")}
    error_if_probe_deployed    ; check to make sure that the probe is not already attached
    _M401

[gcode_macro error_if_probe_deployed]
gcode:
    QUERY_PROBE                 ; check probe status
    do_error_if_probe_deployed  ; logic check to verify probe is not already deployed

[gcode_macro do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
      {action_raise_error("Euclid Probe is already deployed - Remove and Return it to the dock")}
    {% endif %}

# Macro to Deploy Bed Probe
[gcode_macro _M401]
gcode:
    G90
    {% if printer.probe.last_query %} 
      G0 Z15 F3000         ;  set approach elevation of Z15 to clear probe over bed on fixed gantry machine
      #                       for moving gantry machine this may need to be adjusted
      G0 X26.5 Y275         ;  move the carraige to safe position to move from
      G4 P250              ;  wait 1/4 second 
      G0 X26.5 Y305             ;  move sideways over the dock to pick up probe
      G0 Z0.5 F3000         ;  
      M400                 ;  wait for moves to finish
      G4 P250              ;  pause 1/4 sec for detection
      G0 X150           ;  move out of the dock in a straight line 
      G0 Z15               ;  move up to clear the probe over the bed of moving gantry or provide clearance for fixed gantry
      G0 X100 Y275         ;  move probe to center of bed in ready position 
    {% endif %}
    error_if_probe_not_deployed
    {action_respond_info("Exiting M401")}

[gcode_macro error_if_probe_not_deployed]
gcode:
    QUERY_PROBE
    do_error_if_probe_not_deployed

[gcode_macro do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
      {action_raise_error("Euclid Probe failed to deploy!")}
    {% endif %}

# Macro to retract Bed Probe
[gcode_macro M402]
gcode:
    G90
    {action_respond_info("Entering M402")}
    error_if_probe_not_deployed
    _M402

# Macro to Stow Bed Leveling Probe
[gcode_macro _M402]
gcode:
    G90
    {% if not printer.probe.last_query %} ; the logic on this needs function check
     G0 Z15 F2400                  ;  set approach elevation of Z15 for fixed gantry system to clear probe over bed
     #                           ;  for moving gantry system this may have to be altered
     G0 X100 Y275 F3000          ;  start movements at center of the bed 
     G0 X65 Y305 F3000             ;  move to the re-entry staging position
     G0 Z0.5 F2400                  ; 
     G0 X26.5 F500               ;  slowly move into dock 
     M400                        ;  wait for moves to finish
     G4 P250                     ;  forced pause here so motion is definite 90 tavel to swipe
     G0 Y275 Z10 F1000               ;  move up to elevation of Z20
     G0 X150 Y275 F3000            ;  move to front center of bed                   
    {% endif %} 
    error_if_probe_deployed
    {action_respond_info("Exiting M402")}

# Macro to perform a bed mesh calibration by wrapping it between M401/M402 macros
[gcode_macro BED_MESH_CALIBRATE]
rename_existing:    BED_MESH_CALIBRATE_ORIGINAL
gcode:
  M401                           ; deploy Euclid Probe if needed
  BED_MESH_CALIBRATE_ORIGINAL    ; check bed level
  M402                           ; dock Euclid Probe

# Macro to perform a modified z_tilt  by wrapping it between M401/M402 macros
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing:    _QUAD_GANTRY_LEVEL_ORIGINAL
gcode:
  M401                           ; deploy Euclid Probe if needed
  _QUAD_GANTRY_LEVEL_ORIGINAL         ; check bed level
  M402                           ; dock Euclid Probe

# Probe Calibrate
[gcode_macro PROBE_CALIBRATE]
rename_existing:             _PROBE_CALIBRATE
gcode:
    # Go to Z safe distance before saving location in order to
    # avoid crashing the probe on the bed when coming back
    G1 Z25 F240
    M400 # mandatory to save the new safe position
    SAVE_GCODE_STATE NAME=_original_nozzle_location
    
    M401                           ; deploy Euclid Probe if needed

    # Restore nozzle location to probe the right place
    RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED=50

    _PROBE_CALIBRATE {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}

	#store current nozzle location
	SAVE_GCODE_STATE NAME=_original_nozzle_location  
    M402                           ; dock Euclid Probe
	
    # Restore nozzle location again at the end
    RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED=50

# Probe Accuracy
[gcode_macro PROBE_ACCURACY]
rename_existing:             _PROBE_ACCURACY
gcode:
    # Go to Z safe distance before saving location in order to
    # avoid crashing the probe on the bed when coming back
    G1 Z25 F240
    M400 # mandatory to save the new safe position
    SAVE_GCODE_STATE NAME=_original_nozzle_location

    M401                           ; deploy Euclid Probe if needed

    # Restore nozzle location to probe the right place
    RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED=50

    _PROBE_ACCURACY {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}

	#store current nozzle location
	SAVE_GCODE_STATE NAME=_original_nozzle_location 
	
    M402                           ; dock Euclid Probe
	
    # Restore nozzle location again at the end
    RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED=50